EXCHANGEDATA(2) 	    BSD System Calls Manual	       EXCHANGEDATA(2)

NNAAMMEE
     eexxcchhaannggeeddaattaa -- atomically exchange data between two files

SSYYNNOOPPSSIISS
     ##iinncclluuddee <<uunniissttdd..hh>>

     _i_n_t
     eexxcchhaannggeeddaattaa(_c_o_n_s_t _c_h_a_r _* _p_a_t_h_1, _c_o_n_s_t _c_h_a_r _* _p_a_t_h_2,
	 _u_n_s_i_g_n_e_d _l_o_n_g _o_p_t_i_o_n_s);

DDEESSCCRRIIPPTTIIOONN
     The eexxcchhaannggeeddaattaa() function swaps the contents of the files referenced by
     _p_a_t_h_1 and _p_a_t_h_2 in an atomic fashion.  That is, all concurrent processes
     will either see the pre-exchanged state or the post-exchanged state; they
     can never see the files in an inconsistent state.	The data in all forks
     is swapped in this way.  The _o_p_t_i_o_n_s parameter lets you control specific
     aspects of the function's behaviour.

     Open file descriptors follow the swapped data.  Thus, a descriptor that
     previously referenced _p_a_t_h_1 will now reference the data that's accessible
     via _p_a_t_h_2, and vice versa.

     In general, the file attributes (metadata) are not exchanged.  Specifi-
     cally, the object identifier attributes (that is, the ATTR_CMN_OBJID and
     ATTR_CMN_OBJPERMANENTID attributes as defined by the getattrlist(2) func-
     tion) are not swapped.  An exception to this general rule is that the
     modification time attribute ( ATTR_CMN_MODTIME ) is swapped.

     When combined, these features allow you to implement a 'safe save' func-
     tion that does not break references to the file (for example, aliases).
     You first save the new contents to a temporary file and then exchange the
     data of the original file and the temporary.  Programs that reference the
     file via an object identifier will continue to reference the original
     file, but now it has the new data.

     The _p_a_t_h_1 and _p_a_t_h_2 parameters must both reference valid files.  All
     directories listed in the path names leading to these files must be
     searchable.  You must have write access to the files.

     The _o_p_t_i_o_n_s parameter is a bit set that controls the behaviour of
     eexxcchhaannggeeddaattaa().  The following option bits are defined.

     FSOPT_NOFOLLOW  If this bit is set, eexxcchhaannggeeddaattaa() will not follow a sym-
		     link if it occurs as the last component of _p_a_t_h_1 or
		     _p_a_t_h_2.

RREETTUURRNN VVAALLUUEESS
     Upon successful completion a value of 0 is returned.  Otherwise, a value
     of -1 is returned and _e_r_r_n_o is set to indicate the error.

CCOOMMPPAATTIIBBIILLIITTYY
     Not all volumes support eexxcchhaannggeeddaattaa().  You can test whether a volume
     supports eexxcchhaannggeeddaattaa() by using getattrlist(2) to get the volume capa-
     bilities attribute ATTR_VOL_CAPABILITIES, and then testing the
     VOL_CAP_INT_EXCHANGEDATA flag.

EERRRROORRSS
     eexxcchhaannggeeddaattaa() will fail if:

     [ENOTSUP]		The volume does not support eexxcchhaannggeeddaattaa().

     [ENOTDIR]		A component of the path prefix is not a directory.

     [ENAMETOOLONG]	A component of a path name exceeded NAME_MAX charac-
			ters, or an entire path name exceeded PATH_MAX charac-
			ters.

     [ENOENT]		Either file does not exist.

     [EACCES]		Search permission is denied for a component of the
			path prefix.

     [ELOOP]		Too many symbolic links were encountered in translat-
			ing the pathname.

     [EFAULT]		_p_a_t_h_1 or _p_a_t_h_2 points to an invalid address.

     [EXDEV]		_p_a_t_h_1 and _p_a_t_h_2 are on different volumes (mounted file
			systems).

     [EINVAL]		_p_a_t_h_1 or _p_a_t_h_2 reference the same file.

     [EINVAL]		You try to exchange something other than a regular
			file (for example, a directory).

     [EIO]		An I/O error occurred while reading from or writing to
			the file system.

SSEEEE AALLSSOO
     getattrlist(2)

HHIISSTTOORRYY
     A eexxcchhaannggeeddaattaa() function call appeared in Darwin 1.3.1 (Mac OS X version
     10.0).

Darwin			       December 15, 2003			Darwin

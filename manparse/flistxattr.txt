LISTXATTR(2)		    BSD System Calls Manual		  LISTXATTR(2)

NNAAMMEE
     lliissttxxaattttrr,, fflliissttxxaattttrr -- list extended attribute names

SSYYNNOOPPSSIISS
     ##iinncclluuddee <<ssyyss//xxaattttrr..hh>>

     _s_s_i_z_e___t
     lliissttxxaattttrr(_c_o_n_s_t _c_h_a_r _*_p_a_t_h, _c_h_a_r _*_n_a_m_e_b_u_f, _s_i_z_e___t _s_i_z_e, _i_n_t _o_p_t_i_o_n_s);

     _s_s_i_z_e___t
     fflliissttxxaattttrr(_i_n_t _f_d, _c_h_a_r _*_n_a_m_e_b_u_f, _s_i_z_e___t _s_i_z_e, _i_n_t _o_p_t_i_o_n_s);

DDEESSCCRRIIPPTTIIOONN
     Extended attributes extend the basic attributes associated with files and
     directories in the file system.  They are stored as name:data pairs asso-
     ciated with file system objects (files, directories, symlinks, etc).

     lliissttxxaattttrr() retrieves a list of names of extended attributes associated
     with the given _p_a_t_h in the file system.

     _n_a_m_e_b_u_f is a data buffer of _s_i_z_e bytes for the names of the extended
     attributes associated with _p_a_t_h.  The extended attribute names are simple
     NULL-terminated UTF-8 strings and are returned in arbitrary order.  No
     extra padding is provided between names in the buffer.  The list will
     only include names of extended attributes to which the calling process
     has access.  The function returns the size of the list of names.

     _o_p_t_i_o_n_s controls how the attribute list is generated:

     XATTR_NOFOLLOW  do not follow symbolic links.  lliissttxxaattttrr() normally lists
		     attributes of the target of _p_a_t_h if it is a symbolic
		     link.  With this option, lliissttxxaattttrr() will list attributes
		     of the link itself.

     XATTR_SHOWCOMPRESSION
		     lliissttxxaattttrr() and fflliissttxxaattttrr() will list HFS Plus Compres-
		     sion extended attribute(s) (if present) for the file
		     referred to by _p_a_t_h or _f_d.

     If _n_a_m_e_b_u_f is set to NULL, the function returns the size of the list of
     extended attribute names.	This facility can be used to determine the
     size of a buffer sufficiently large to hold the names of the attributes
     currently associated with _p_a_t_h.

     fflliissttxxaattttrr() is identical to lliissttxxaattttrr(), except that it returns the list
     of extended attribute names associated with the open file referenced by
     file descriptor _f_d.

RREETTUURRNN VVAALLUUEESS
     On success, the size of the extended attribute name list is returned.  If
     no accessible extended attributes are associated with the given _p_a_t_h or
     _f_d, the function returns zero.  On failure, -1 is returned and the global
     variable _e_r_r_n_o is set as follows.

EERRRROORRSS
     [ENOTSUP]		The file system does not support extended attributes
			or has the feature disabled.

     [ERANGE]		_n_a_m_e_b_u_f (as indicated by _s_i_z_e) is too small to hold
			the list of names.

     [EPERM]		_p_a_t_h or _f_d refer to a file system object that does not
			support extended attributes.  For example, resource
			forks don't support extended attributes.

     [ENOTDIR]		A component of _p_a_t_h _'_s prefix is not a directory.

     [ENAMETOOLONG]	_n_a_m_e exceeds XATTR_MAXNAMELEN UTF-8 bytes, or a compo-
			nent of _p_a_t_h exceeds NAME_MAX characters, or the
			entire _p_a_t_h exceeds PATH_MAX characters.

     [EACCES]		Search permission is denied for a component of _p_a_t_h or
			permission is denied to read the list of attributes
			from this file.

     [ELOOP]		Too many symbolic links were encountered resolving
			_p_a_t_h.

     [EFAULT]		_p_a_t_h points to an invalid address.

     [EIO]		An I/O error occurred.

     [EINVAL]		_o_p_t_i_o_n_s does not make sense.

SSEEEE AALLSSOO
     getxattr(2), removexattr(2), setxattr(2)

HHIISSTTOORRYY
     lliissttxxaattttrr() and fflliissttxxaattttrr() first appeared in Mac OS X 10.4.

Mac OS X			 Oct 19, 2004			      Mac OS X

NFSSVC(2)		    BSD System Calls Manual		     NFSSVC(2)

NNAAMMEE
     nnffssssvvcc -- NFS services

SSYYNNOOPPSSIISS
     ##iinncclluuddee <<uunniissttdd..hh>>
     ##iinncclluuddee <<nnffss//nnffss..hh>>

     _i_n_t
     nnffssssvvcc(_i_n_t _f_l_a_g_s, _v_o_i_d _*_a_r_g_s_t_r_u_c_t_p);

DDEESSCCRRIIPPTTIIOONN
     The nnffssssvvcc() function is used by the NFS server daemon to pass informa-
     tion into and out of the kernel and also to enter the kernel as a server
     daemon.  The _f_l_a_g_s argument consists of several bits that show what
     action is to be taken once in the kernel and the _a_r_g_s_t_r_u_c_t_p points to any
     corresponding data that the action may require.

     nnffssssvvcc() is called with the flag NFSSVC_NFSD and a NULL _a_r_g_s_t_r_u_c_t_p to
     enter the kernel as an nfsd(8) daemon.  The NFSSVC_NFSD action normally
     does not return until the NFS server is stopped.

     The nfsd(8) server daemon calls nnffssssvvcc() with the flag NFSSVC_ADDSOCK and
     a pointer to a

     struct nfsd_args {
	     int     sock;	     /* Socket to serve */
	     caddr_t name;	     /* Client address for connection based sockets */
	     int     namelen;	     /* Length of name */
     };

     to pass a server side NFS socket into the kernel for servicing by the
     nfsd(8) daemons.

     The nfsd(8) server daemon calls nnffssssvvcc() with the flag NFSSVC_EXPORT and
     a pointer to a

     struct nfs_export_args {
	     uint32_t		     nxa_fsid;	     /* export FS ID */
	     uint32_t		     nxa_expid;      /* export ID */
	     char		     *nxa_fspath;    /* export FS path */
	     char		     *nxa_exppath;   /* export sub-path */
	     uint32_t		     nxa_flags;      /* export arg flags */
	     uint32_t		     nxa_netcount;   /* #entries in ex_nets array */
	     struct nfs_export_net_args *nxa_nets;   /* array of net args */
     };

     to pass exported file system information into the kernel.

RREETTUURRNN VVAALLUUEESS
     Upon successful completion, a value of 0 is returned.  Otherwise, -1 is
     returned the global variable _e_r_r_n_o is set to specify the error.

EERRRROORRSS
     [EPERM]		The caller is not the super-user.

     [EINVAL]		The action specified by the _f_l_a_g_s argument was not
			valid.

     [EFAULT]		_a_r_g_s_t_r_u_c_t_p points to an invalid address.

     [ENOMEM]		A memory allocation failure prevented the action from
			completing.

     [EEXIST]		An attempt was made to add a UDP socket via the
			NFSSVC_ADDSOCK action, but the UDP socket has already
			been added.

SSEEEE AALLSSOO
     nfsd(8)

HHIISSTTOORRYY
     The nnffssssvvcc function first appeared in 4.4BSD.

BBUUGGSS
     The nnffssssvvcc system call is designed specifically for the NFS server dae-
     mons and as such is specific to their requirements.  Several fields of
     the argument structures are assumed to be valid, such that nnffssssvvcc must be
     used with extreme care.

BSD				January 9, 2007 			   BSD

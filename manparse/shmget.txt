SHMGET(2)		    BSD System Calls Manual		     SHMGET(2)

NNAAMMEE
     sshhmmggeett -- get shared memory area identifier

SSYYNNOOPPSSIISS
     ##iinncclluuddee <<ssyyss//sshhmm..hh>>

     _i_n_t
     sshhmmggeett(_k_e_y___t _k_e_y, _s_i_z_e___t _s_i_z_e, _i_n_t _s_h_m_f_l_g);

DDEESSCCRRIIPPTTIIOONN
     sshhmmggeett() returns the shared memory identifier associated with the key
     _k_e_y.

     A shared memory segment is created if either _k_e_y is equal to IPC_PRIVATE,
     or _k_e_y does not have a shared memory segment identifier associated with
     it, and the IPC_CREAT bit is set in _s_h_m_f_l_g_.

     If a new shared memory segment is created, the data structure associated
     with it (the _s_h_m_i_d___d_s structure, see shmctl(2)) is initialized as fol-
     lows:

     ++oo	 _s_h_m___p_e_r_m_._c_u_i_d and _s_h_m___p_e_r_m_._u_i_d are set to the effective uid of the
	 calling process.

     ++oo	 _s_h_m___p_e_r_m_._g_i_d and _s_h_m___p_e_r_m_._c_g_i_d are set to the effective gid of the
	 calling process.

     ++oo	 _s_h_m___p_e_r_m_._m_o_d_e is set to the lower 9 bits of _s_h_m_f_l_g.

     ++oo	 _s_h_m___l_p_i_d, _s_h_m___n_a_t_t_c_h, _s_h_m___a_t_i_m_e, and _s_h_m___d_t_i_m_e are set to 0

     ++oo	 _s_h_m___c_t_i_m_e is set to the current time.

     ++oo	 _s_h_m___s_e_g_s_z is set to the value of _s_i_z_e.

     ++oo	 The ftok(3) function may be used to generate a key from a pathname.

RREETTUURRNN VVAALLUUEESS
     Upon successful completion a positive shared memory segment identifier is
     returned.	Otherwise, -1 is returned and the global variable _e_r_r_n_o is set
     to indicate the error.

EERRRROORRSS
     The sshhmmggeett() system call will fail if:

     [EACCES]		A shared memory segment is already associated with _k_e_y
			and the caller has no permission to access it.

     [EEXIST]		Both IPC_CREAT and IPC_EXCL are set in _s_h_m_f_l_g, and a
			shared memory segment is already associated with _k_e_y.

     [EINVAL]		No shared memory segment is to be created, and a
			shared memory segment exists for _k_e_y, but the size of
			the segment associated with it is less than _s_i_z_e,
			which is non-zero.

     [ENOENT]		IPC_CREAT was not set in _s_h_m_f_l_g and no shared memory
			segment associated with _k_e_y was found.

     [ENOMEM]		There is not enough memory left to created a shared
			memory segment of the requested size.

     [ENOSPC]		A new shared memory identifier could not be created
			because the system limit for the number of shared mem-
			ory identifiers has been reached.

LLEEGGAACCYY SSYYNNOOPPSSIISS
     ##iinncclluuddee <<ssyyss//ttyyppeess..hh>>
     ##iinncclluuddee <<ssyyss//iippcc..hh>>
     ##iinncclluuddee <<ssyyss//sshhmm..hh>>

     _i_n_t
     sshhmmggeett(_k_e_y___t _k_e_y, _i_n_t _s_i_z_e, _i_n_t _s_h_m_f_l_g);

     All of these include files are necessary.	The type of _s_i_z_e has changed.

SSEEEE AALLSSOO
     ftok(3), shmat(2), shmctl(2), shmdt(2), compat(5)

BSD				August 17, 1995 			   BSD

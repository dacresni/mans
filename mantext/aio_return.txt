AIO_RETURN(2)		    BSD System Calls Manual		 AIO_RETURN(2)

NNAAMMEE
     aaiioo__rreettuurrnn -- retrieve return status of asynchronous I/O operation (REAL-
     TIME)

LLIIBBRRAARRYY
     Standard C Library (libc, -lc)

SSYYNNOOPPSSIISS
     ##iinncclluuddee <<aaiioo..hh>>

     _s_s_i_z_e___t
     aaiioo__rreettuurrnn(_s_t_r_u_c_t _a_i_o_c_b _*_a_i_o_c_b_p);

DDEESSCCRRIIPPTTIIOONN
     The aaiioo__rreettuurrnn() system call returns the final status of the asynchronous
     I/O request associated with the structure pointed to by _a_i_o_c_b_p.

     The aaiioo__rreettuurrnn() system call should only be called once, to obtain the
     final status of an asynchronous I/O operation (once aio_error(2) returns
     something other than EINPROGRESS) and to clean up system resources. How-
     ever, if aaiioo__rreettuurrnn() is not called at all, aio(4) will leak resources.

RREETTUURRNN VVAALLUUEESS
     If the asynchronous I/O request has completed, the status is returned as
     described in read(2), write(2), or fsync(2).  On failure, aaiioo__rreettuurrnn()
     returns -1 and sets errno to indicate the error condition.

EERRRROORRSS
     The aaiioo__rreettuurrnn() system call will fail if:

     [EINVAL]		The _a_i_o_c_b_p argument does not reference an outstanding
			asynchronous I/O request.

     [EINPROGRESS]	The asynchronous I/O request is still in progress.

LLEEGGAACCYY SSYYNNOOPPSSIISS
     ##iinncclluuddee <<aaiioo..hh>>

     _i_n_t
     aaiioo__rreettuurrnn(_s_t_r_u_c_t _a_i_o_c_b _*_a_i_o_c_b_p);

     The type of the return value has changed.

SSEEEE AALLSSOO
     aio_cancel(2), aio_error(2), aio_suspend(2), aio_write(2), fsync(2),
     read(2), write(2), aio(4), compat(5)

SSTTAANNDDAARRDDSS
     The aaiioo__rreettuurrnn() system call is expected to conform to the IEEE Std
     1003.1 (``POSIX.1'') standard.

HHIISSTTOORRYY
     The aaiioo__rreettuurrnn() system call first appeared in FreeBSD 3.0.

AAUUTTHHOORRSS
     This manual page was written by Wes Peters <wes@softweyr.com>.

BSD			      September 26, 2008			   BSD

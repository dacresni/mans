SETPGID(2)		    BSD System Calls Manual		    SETPGID(2)

NNAAMMEE
     sseettppggiidd, sseettppggrrpp -- set process group

SSYYNNOOPPSSIISS
     ##iinncclluuddee <<uunniissttdd..hh>>

     _i_n_t
     sseettppggiidd(_p_i_d___t _p_i_d, _p_i_d___t _p_g_i_d);

     _p_i_d___t
     sseettppggrrpp(_v_o_i_d);

DDEESSCCRRIIPPTTIIOONN
     SSeettppggiidd() sets the process group of the specified process _p_i_d to the
     specified _p_g_i_d.  If _p_i_d is zero, then the call applies to the current
     process.

     If the invoker is not the super-user, then the affected process must have
     the same effective user-id as the invoker or be a descendant of the
     invoking process.

     If the calling process is not already a session leader, sseettppggrrpp() sets
     the process group ID of the calling process to that of the calling
     process.  Any new session that this creates will have no controlling ter-
     minal.

RREETTUURRNN VVAALLUUEESS
     SSeettppggiidd() returns 0 when the operation was successful.  If the request
     failed, -1 is returned and the global variable _e_r_r_n_o indicates the rea-
     son.

EERRRROORRSS
     SSeettppggiidd() will fail and the process group will not be altered if:

     [EACCES]		The value of the _p_i_d argument matches the process ID
			of a child process of the calling process, and the
			child process has successfully executed one of the
			exec functions.

     [EINVAL]		The value of the _p_g_i_d argument is less than 0 or is
			not a value supported by the implementation.

     [EPERM]		The process indicated by the _p_i_d argument is a session
			leader.

     [EPERM]		The effective user ID of the requested process is dif-
			ferent from that of the caller and the process is not
			a descendant of the calling process.

     [EPERM]		The value of the _p_g_i_d _a_r_g_u_m_e_n_t is valid, but does not
			match the process ID of the process indicated by the
			_p_i_d argument and there is no process with a process
			group ID that matches the value of the _p_g_i_d argument
			in the same session as the calling process.

     [ESRCH]		The value of the _p_i_d argument does not match the
			process ID of the calling process or of a child
			process of the calling process.

LLEEGGAACCYY SSYYNNOOPPSSIISS
     ##iinncclluuddee <<uunniissttdd..hh>>

     _i_n_t
     sseettppggrrpp(_p_i_d___t _p_i_d, _p_i_d___t _p_g_i_d);

     The legacy sseettppggrrpp() function is a clone of the sseettppggiidd() function,
     retained for calling convention compatibility with historical versions of
     BSD.

CCOOMMPPAATTIIBBIILLIITTYY
     Use of the legacy version of the sseettppggrrpp() call will cause compiler diag-
     nostics.  Use sseettppggiidd() instead.

     Use of private (and conflicting) prototypes for sseettppggrrpp() will cause com-
     piler diagnostics.  Delete the private prototypes and include <_u_n_i_s_t_d_._h>.

SSEEEE AALLSSOO
     getpgrp(2), compat(5)

SSTTAANNDDAARRDDSS
     The sseettppggiidd() function conforms to IEEE Std 1003.1-1988 (``POSIX.1'').

4th Berkeley Distribution	 June 4, 1993	     4th Berkeley Distribution

WRITE(2)		    BSD System Calls Manual		      WRITE(2)

NNAAMMEE
     ppwwrriittee, wwrriittee, wwrriitteevv -- write output

LLIIBBRRAARRYY
     Standard C Library (libc, -lc)

SSYYNNOOPPSSIISS
     ##iinncclluuddee <<uunniissttdd..hh>>

     _s_s_i_z_e___t
     ppwwrriittee(_i_n_t _f_i_l_d_e_s, _c_o_n_s_t _v_o_i_d _*_b_u_f, _s_i_z_e___t _n_b_y_t_e, _o_f_f___t _o_f_f_s_e_t);

     _s_s_i_z_e___t
     wwrriittee(_i_n_t _f_i_l_d_e_s, _c_o_n_s_t _v_o_i_d _*_b_u_f, _s_i_z_e___t _n_b_y_t_e);

     ##iinncclluuddee <<ssyyss//uuiioo..hh>>

     _s_s_i_z_e___t
     wwrriitteevv(_i_n_t _f_i_l_d_e_s, _c_o_n_s_t _s_t_r_u_c_t _i_o_v_e_c _*_i_o_v, _i_n_t _i_o_v_c_n_t);

DDEESSCCRRIIPPTTIIOONN
     WWrriittee() attempts to write _n_b_y_t_e of data to the object referenced by the
     descriptor _f_i_l_d_e_s from the buffer pointed to by _b_u_f.  WWrriitteevv() performs
     the same action, but gathers the output data from the _i_o_v_c_n_t buffers
     specified by the members of the _i_o_v array: iov[0], iov[1], ...,
     iov[iovcnt-1].  PPwwrriittee() performs the same function, but writes to the
     specified position in the file without modifying the file pointer.

     For wwrriitteevv(), the _i_o_v_e_c structure is defined as:

	   struct iovec {
		   char   *iov_base;  /* Base address. */
		   size_t iov_len;    /* Length. */
	   };

     Each _i_o_v_e_c entry specifies the base address and length of an area in mem-
     ory from which data should be written.  WWrriitteevv() will always write a com-
     plete area before proceeding to the next.

     On objects capable of seeking, the wwrriittee() starts at a position given by
     the pointer associated with _f_i_l_d_e_s, see lseek(2).	Upon return from
     wwrriittee(), the pointer is incremented by the number of bytes which were
     written.

     Objects that are not capable of seeking always write from the current
     position.	The value of the pointer associated with such an object is
     undefined.

     If the real user is not the super-user, then wwrriittee() clears the set-user-
     id bit on a file.	This prevents penetration of system security by a user
     who ``captures'' a writable set-user-id file owned by the super-user.

     When using non-blocking I/O on objects, such as sockets, that are subject
     to flow control, wwrriittee() and wwrriitteevv() may write fewer bytes than
     requested; the return value must be noted, and the remainder of the oper-
     ation should be retried when possible.

RREETTUURRNN VVAALLUUEESS
     Upon successful completion the number of bytes which were written is
     returned.	Otherwise, a -1 is returned and the global variable _e_r_r_n_o is
     set to indicate the error.

EERRRROORRSS
     The wwrriittee(), wwrriitteevv(), and ppwwrriittee() system calls will fail and the file
     pointer will remain unchanged if:

     [EDQUOT]		The user's quota of disk blocks on the file system
			containing the file is exhausted.

     [EFAULT]		Part of _i_o_v or data to be written to the file points
			outside the process's allocated address space.

     [EINVAL]		The pointer associated with _f_i_l_d_e_s is negative.

     The wwrriittee() and ppwwrriittee() system calls will fail and the file pointer will
     remain unchanged if:

     [EAGAIN]		The file is marked for non-blocking I/O, and no data
			could be written immediately.

     [EBADF]		_f_i_l_d_e_s is not a valid file descriptor open for writ-
			ing.

     [ECONNRESET]	A write is attempted on a socket that is not con-
			nected.

     [EFBIG]		An attempt is made to write a file that exceeds the
			process's file size limit or the maximum file size.

     [EFBIG]		The file is a regular file, _n_b_y_t_e is greater than 0,
			and the starting position is greater than or equal to
			the offset maximum established in the open file
			description associated with _f_i_l_d_e_s.

     [EINTR]		A signal interrupts the write before it could be com-
			pleted.

     [EIO]		An I/O error occurs while reading from or writing to
			the file system.

     [ENETDOWN] 	A write is attempted on a socket and the local network
			interface used to reach the destination is down.

     [ENETUNREACH]	A write is attempted on a socket and no route to the
			network is present.

     [ENOSPC]		There is no free space remaining on the file system
			containing the file.

     [ENXIO]		A request is made of a nonexistent device, or the
			request is outside the capabilities of the device.

     [EPIPE]		An attempt is made to write to a pipe that is not open
			for reading by any process.

     [EPIPE]		An attempt is made to write to a socket of type
			SOCK_STREAM that is not connected to a peer socket.

     The wwrriittee() and wwrriitteevv() calls may also return the following errors:

     [EAGAIN]		See EWOULDBLOCK, below.

     [EWOULDBLOCK]	The file descriptor is for a socket, is marked O_NON-
			BLOCK, and write would block.  The exact error code
			depends on the protocol, but EWOULDBLOCK is more com-
			mon.

     In addition, wwrriitteevv() may return one of the following errors:

     [EDESTADDRREQ]	The destination is no longer available when writing to
			a UNIX domain datagram socket on which connect(2) had
			been used to set a destination address.

     [EINVAL]		_I_o_v_c_n_t is less than or equal to 0, or greater than
			UIO_MAXIOV.

     [EINVAL]		One of the _i_o_v___l_e_n values in the _i_o_v array is nega-
			tive.

     [EINVAL]		The sum of the _i_o_v___l_e_n values in the _i_o_v array over-
			flows a 32-bit integer.

     [ENOBUFS]		The mbuf pool has been completely exhausted when writ-
			ing to a socket.

     The ppwwrriittee() call may also return the following errors:

     [EINVAL]		The specified file offset is invalid.

     [ESPIPE]		The file descriptor is associated with a pipe, socket,
			or FIFO.

LLEEGGAACCYY SSYYNNOOPPSSIISS
     ##iinncclluuddee <<ssyyss//ttyyppeess..hh>>
     ##iinncclluuddee <<ssyyss//uuiioo..hh>>
     ##iinncclluuddee <<uunniissttdd..hh>>

     These include files are needed for all three functions.

SSEEEE AALLSSOO
     fcntl(2), lseek(2), open(2), pipe(2), select(2), compat(5)

SSTTAANNDDAARRDDSS
     The wwrriittee() function call is expected to conform to ISO/IEC 9945-1:1990
     (``POSIX.1'').  The wwrriitteevv() and ppwwrriittee() functions are expected to con-
     form to X/Open Portability Guide Issue 4, Version 2 (``XPG4.2'').

HHIISSTTOORRYY
     The ppwwrriittee() function call appeared in AT&T System V.4 UNIX.  The
     wwrriitteevv() function call appeared in 4.2BSD.  A wwrriittee() function call
     appeared in Version 6 AT&T UNIX.

BSD				 April 2, 1994				   BSD

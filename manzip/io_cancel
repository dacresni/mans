.\" Copyright (C) 2003 Free Software Foundation, Inc.
.\" This file is distributed according to the GNU General Public License.
.\" See the file COPYING in the top level source directory for details.
.\"
.\" .de Sh \" Subsection
.\" .br
.\" .if t .Sp
.\" .ne 5
.\" .PP
.\" \fB\\$1\fP
.\" .PP
.\" ..
.\" .de Sp \" Vertical space (when we can't use .PP)
.\" .if t .sp .5v
.\" .if n .sp
.\" ..
.\" .de Ip \" List item
.\" .br
.\" .ie \\n(.$>=3 .ne \\$3
.\" .el .ne 3
.\" .IP "\\$1" \\$2
.\" ..
.TH IO_CANCEL 2 2008-06-18 "Linux" "Linux Programmer's Manual"
.SH NAME
io_cancel \- cancel an outstanding asynchronous I/O operation
.SH "SYNOPSIS"
.nf
.\" .ad l
.\" .hy 0
.\"
.B #include <libaio.h>
.\"#include <linux/aio.h>
.sp
.\" .HP 16
.BI "int io_cancel(aio_context_t " ctx_id ", struct iocb *" iocb ,
.BI "              struct io_event *" result );
.\" .ad
.\" .hy
.sp
Link with \fI\-laio\fP.
.fi
.SH "DESCRIPTION"
.PP
.BR io_cancel ()
attempts to cancel an asynchronous I/O operation previously submitted with
.BR io_submit (2).
\fIctx_id\fP is the AIO context ID of the operation to be canceled.
If the AIO context is found, the event will be canceled and then copied
into the memory pointed to by \fIresult\fP without being placed
into the completion queue.
.SH "RETURN VALUE"
On success,
.BR io_cancel ()
returns 0.
For the failure return, see NOTES.
.SH "ERRORS"
.TP
.B EAGAIN
The \fIiocb\fP specified was not canceled.
.TP
.B EFAULT
One of the data structures points to invalid data.
.TP
.B EINVAL
The AIO context specified by \fIctx_id\fP is invalid.
.TP
.B ENOSYS
.BR io_cancel ()
is not implemented on this architecture.
.SH "VERSIONS"
.PP
The asynchronous I/O system calls first appeared in Linux 2.5, August 2002.
.SH "CONFORMING TO"
.PP
.BR io_cancel ()
is Linux-specific and should not be used
in programs that are intended to be portable.
.SH NOTES
Glibc does not provide a wrapper function for this system call.

The wrapper provided in
.I libaio
for
.BR io_cancel ()
does not follow the usual C library conventions for indicating error:
on error it returns a negated error number
(the negative of one of the values listed in ERRORS).
If the system call is invoked via
.BR syscall (2),
then the return value follows the usual conventions for
indicating an error: \-1, with
.I errno
set to a (positive) value that indicates the error.
.SH "SEE ALSO"
.BR io_destroy (2),
.BR io_getevents (2),
.BR io_setup (2),
.BR io_submit (2)
.\" .SH "NOTES"
.\"
.\" .PP
.\" The asynchronous I/O system calls were written by Benjamin LaHaise.
.\"
.\" .SH AUTHOR
.\" Kent Yoder.
.SH COLOPHON
This page is part of release 3.27 of the Linux
.I man-pages
project.
A description of the project,
and information about reporting bugs,
can be found at
http://www.kernel.org/doc/man-pages/.
